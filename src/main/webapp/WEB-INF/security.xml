<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<http pattern="/loginpage**" security="none" />

	<http use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/master**" access="hasRole('ROLE_SM')" />
		<intercept-url pattern="/dev**" access="hasRole('ROLE_DEV')" />
		<intercept-url pattern="/test**" access="hasRole('ROLE_TEST')" />
		<intercept-url pattern="/employee**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/sprint**" access="hasRole('ROLE_SM')" />
		<intercept-url pattern="/userstory**"
			access="hasAnyRole('ROLE_SM', 'ROLE_DEV', 'ROLE_TEST')" />
		<intercept-url pattern="/index**" access="permitAll" />
		<form-login login-page="/loginpage.html" />
		<logout logout-url="/logout" logout-success-url="/" />
		<csrf disabled="true" />
	</http>

	<authentication-manager>
		<authentication-provider>

			<password-encoder hash="bcrypt" />

			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select 
				employee.username, role.role from employee join employee_role on employee.id 
				= employee_role.employee_id join role on employee_role.roles_id = role.id 
				where employee.username = ?"
				users-by-username-query="select username,password,enabled 
				from employee where username = ?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
